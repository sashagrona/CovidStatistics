<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:kafka="http://www.mulesoft.org/schema/mule/kafka"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/kafka http://www.mulesoft.org/schema/mule/kafka/current/mule-kafka.xsd
http://www.mulesoft.org/schema/mule/cassandra-db http://www.mulesoft.org/schema/mule/cassandra-db/current/mule-cassandra-db.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	
	<flow name="prc-to-kafka.prepare-data" doc:id="24495d38-b66a-49fe-b9c8-3ec897e39849">
		<logger level="INFO" doc:name="Start" doc:id="4f2f8d5d-6185-4cb1-a046-6c865725b1f8" message="START - [#[flow.name]] - [#[vars.trackingId]] - There is no required data in db, processing new request"/>
		<set-variable value="#[payload[-1].date]" doc:name="Set last db Date" doc:id="7a1f1658-0835-485d-bd40-e29bbd9d09eb" variableName="lastDate"/>
		<http:request method="GET" doc:name="Request external api" doc:id="f551a89a-782c-4295-a75f-6389c576ba54" config-ref="HTTP_Request_covid" path="/historical/{country}" responseTimeout="${covid.timeout}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"country" : vars.country
}]]]></http:uri-params>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"lastdays" : vars.lastDays as Number + 1
}]]]></http:query-params>
		</http:request>
		<os:retrieve doc:name="Get watermark" doc:id="e31122c3-cccc-4164-941e-272701faf8ea" key="watermark" objectStore="Object_store" target="watermark">
			<os:default-value ><![CDATA[#[[]]]]></os:default-value>
		</os:retrieve>
		<ee:transform doc:name="Set data" doc:id="6b5b1a21-56ae-4516-96d5-7883ea09b992">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun removeFirst(object) = object filterObject((value, key, index) -> index > 0)
---
{
	cases: removeFirst(payload.timeline.cases),
	deaths: removeFirst(payload.timeline.deaths),
	recovered: removeFirst(payload.timeline.recovered)
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="newData"><![CDATA[%dw 2.0
output application/json
import * from dw::core::Objects
var size = sizeOf(payload.timeline.cases)
var cases = valueSet(payload.timeline.cases)
var deaths = valueSet(payload.timeline.deaths)
var recovered = valueSet(payload.timeline.recovered)
---
1 to size-1 map{
	cases: cases[$$+1] - cases[$$],
	deaths: deaths[$$+1] - deaths[$$],
	recovered: recovered[$$+1] - recovered[$$]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Prepare message for user" doc:id="6356af5d-8105-4f3b-82a2-f1117c9282d1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var convert = (date) -> date as String as Date{format: "M/d/yy"} as String{format: "y-MM-dd"}
---
payload.cases pluck(value, key, index) -> {
		country: vars.country,
		date: (convert(key)), 
		cases: {
			total: payload.cases[key],
			new: vars.newData[index].cases
		},
		deaths: {
			total: payload.deaths[key],
			new: vars.newData[index].deaths
		},
		recovered: {
			total: payload.recovered[key],
			new: vars.newData[index].recovered
		}
	}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="prc-to-kafka.send-to-kafka" doc:id="5488939f-98f9-4811-aa02-ef4aa160a399" name="prc-to-kafka.send-to-kafka"/>
		<flow-ref doc:name="prc-to-kafka.set-watermark" doc:id="6d0813b9-9f3f-4d64-a5f6-cd45f95be233" name="prc-to-kafka.set-watermark"/>
	</flow>
	<sub-flow name="prc-to-kafka.set-watermark" doc:id="9d3e4c50-3bb8-417e-b4ec-1ff4312f3f9b" >
		<logger level="INFO" doc:name="Start" doc:id="32ce7137-5ae0-4abb-8479-9d5b0bf26ec1" message="START [#[flow.name]] - [#[vars.trackingId]] - Setting new watermark"/>
		<ee:transform doc:name="Set watermark" doc:id="96475215-3aa5-4203-b3cc-7d7a94a0bb24">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="watermark"><![CDATA[%dw 2.0
output application/java
import keySet from dw::core::Objects
var new = {
	country: vars.country,
	date : payload[0].date
}
var elementInArr = (obj) -> (vars.watermark filter $.country == obj)[0]
fun contains(obj) = if(isEmpty(elementInArr(obj))) false else true
---
if(contains(vars.country) and elementInArr(vars.country).date > new.date) 
	(vars.watermark- elementInArr(vars.country)) << new
else
	((vars.watermark) << new) distinctBy $
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:store doc:name="Store new watermark" doc:id="29e13fa5-b35a-4e2e-86ae-5781478e0766" key="watermark" objectStore="Object_store">
			<os:value><![CDATA[#[vars.watermark]]]></os:value>
		</os:store>
		<logger level="INFO" doc:name="End" doc:id="f188ce11-5c7c-4def-b033-1c876346e136" message="End [#[flow.name]] - [#[vars.trackingId]] - Setting new watermark"/>
	</sub-flow>
	<sub-flow name="prc-to-kafka.send-to-kafka" doc:id="bf4bbfb5-ba96-4d63-ad55-cfba04828262" >
		<logger level="INFO" doc:name="Start" doc:id="6a8fa40a-46ab-4f72-bf89-3587bee211a7" message="Start [#[flow.name]] - [#[vars.trackingId]] - Sending data to Kafka"/>
		<ee:transform doc:name="Prepare message for Kafka" doc:id="cf211f29-cfab-4b8e-90bb-f943638cac85">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="message"><![CDATA[%dw 2.0
output application/json
import * from dw::core::Arrays
var element = vars.watermark filter $.country == vars.country
var indexDate = if(!isEmpty(element)) indexOf(vars.watermark, vars.country) else null
---
if(indexDate != null)
 payload filter ($.date < vars.watermark[indexDate].date or $.date > vars.lastDate)
else 
 payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="ffd8afb9-2c90-4016-880a-2ec8ce24f21b" collection="#[vars.message]">
			<kafka:publish doc:name="Publish" doc:id="af0fabc7-a32d-4fb8-b335-3293c2519954" config-ref="Apache_Kafka_Producer_configuration" topic="${kafka.topic}" partition="0" key="#[now()]" />
			<logger level="INFO" doc:name="Log message" doc:id="520b078a-ee09-49d1-858b-12188bbda62f" message="#[vars.message]"/>
		</foreach>
		<logger level="INFO" doc:name="End" doc:id="161f1469-5455-4261-b040-acf4a0a5eebf" message="End [#[flow.name]] - [#[vars.trackingId]] - Sending data to Kafka"/>
	</sub-flow>
</mule>