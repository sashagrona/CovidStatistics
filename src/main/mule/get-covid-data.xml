<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:cassandra-db="http://www.mulesoft.org/schema/mule/cassandra-db"
	xmlns:kafka="http://www.mulesoft.org/schema/mule/kafka"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/kafka http://www.mulesoft.org/schema/mule/kafka/current/mule-kafka.xsd
http://www.mulesoft.org/schema/mule/cassandra-db http://www.mulesoft.org/schema/mule/cassandra-db/current/mule-cassandra-db.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<flow name="get--covid-dataFlow" doc:id="cdabfdaa-14f5-4bd2-9694-a6f8c43c4953">
		<http:request method="GET" doc:name="Request" doc:id="4ab9249c-df54-4b5b-89be-8f832bbdaff4" config-ref="HTTP_Request_covid" path="/historical/{country}" responseTimeout="${covid.timeout}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"country" : vars.country
}]]]></http:uri-params>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"lastdays" : vars.lastDays as Number + 1
}]]]></http:query-params>
		</http:request>
			<os:retrieve doc:name="Retrieve" doc:id="a2e717cf-4767-4dde-a14a-bdfc09167243" key="watermark" objectStore="Object_store" target="watermark">
			<os:default-value ><![CDATA[#[[]]]]></os:default-value>
		</os:retrieve>
		<ee:transform doc:name="Set data" doc:id="e33c8f62-327e-4e0c-b06a-974d43b6f62d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun removeFirst(object) = object filterObject((value, key, index) -> index > 0)

---
{
	cases: removeFirst(payload.timeline.cases),
	deaths: removeFirst(payload.timeline.deaths),
	recovered: removeFirst(payload.timeline.recovered)
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="newData"><![CDATA[%dw 2.0
output application/json
import * from dw::core::Objects
var size = sizeOf(payload.timeline.cases)
var cases = valueSet(payload.timeline.cases)
var deaths = valueSet(payload.timeline.deaths)
var recovered = valueSet(payload.timeline.recovered)
---
1 to size-1 map{
	cases: cases[$$+1] - cases[$$],
	deaths: deaths[$$+1] - deaths[$$],
	recovered: recovered[$$+1] - recovered[$$]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Prepare message for user" doc:id="97abb947-9432-4262-b731-42093f5f9916">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var convert = (date) -> date as String as Date{format: "M/d/yy"} as String{format: "y-MM-dd"}
---
payload.cases pluck(value, key, index) -> {
		country: vars.country,
		date: (convert(key)), 
		cases: {
			total: payload.cases[key],
			new: vars.newData[index].cases
		},
		deaths: {
			total: payload.deaths[key],
			new: vars.newData[index].deaths
		},
		recovered: {
			total: payload.recovered[key],
			new: vars.newData[index].recovered
		}
	}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Prepare message for Kafka" doc:id="6fc0c9d4-af43-4556-bae1-be8918fd413d">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="message"><![CDATA[%dw 2.0
output application/json
import * from dw::core::Arrays
var element = vars.watermark filter $.country == vars.country
var indexDate = if(!isEmpty(element)) indexOf(vars.watermark, vars.country) else null
---
if(indexDate != null) payload filter $.date < vars.watermark[indexDate].date else payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set watermark" doc:id="15f21f2c-9dcc-4b19-aced-38d1a4a20128" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="watermark" ><![CDATA[%dw 2.0
output application/java
import keySet from dw::core::Objects
var new = {
	country: vars.country,
	date : payload[0].date
}
var elementInArr = (obj) -> (vars.watermark filter $.country == obj)[0]
fun contains(obj) = if(isEmpty(elementInArr(obj))) false else true
---
if(contains(vars.country) and elementInArr(vars.country).date > new.date) 
	(vars.watermark- elementInArr(vars.country)) << new
else
	(vars.watermark) << new
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:store doc:name="Store" doc:id="623b0021-1ce2-4b7a-8476-6d606ac86741" key="watermark" objectStore="Object_store">
			<os:value ><![CDATA[#[vars.watermark]]]></os:value>
		</os:store>
		<foreach doc:name="For Each" doc:id="625f1abd-6bbb-46c8-968b-50683806cd3d" collection="#[vars.message]">
			<kafka:publish doc:name="Publish" doc:id="cae72c77-d63a-46f0-b31e-c7a73752a292" config-ref="Apache_Kafka_Producer_configuration" topic="${kafka.topic}" partition="0" key="#[now()]"/>
			<logger level="INFO" doc:name="Logger" doc:id="abebef41-f8b3-497a-bb2a-45b79e107d56" />
		</foreach>
	</flow>
	<flow name="get--covid-dataFlow1" doc:id="fea2e817-2c86-4a62-a239-7863a06c50ae">
		<kafka:message-listener doc:name="Message listener" doc:id="d67fa252-a714-4f50-bd98-c9d3bad3bd44" config-ref="Apache_Kafka_Consumer_configuration"/>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="c44d30d7-4f77-464a-8c33-4f928dd640dc" mimeType="application/json"/>
		<ee:transform doc:name="Prepare payload for INSERT" doc:id="ac10a90e-4218-4d81-840c-4d9cdee11008">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	country: payload.country,
	date: payload.date,
	cases: {
		total: payload.cases.total,
		new: payload.cases.new
	},
	deaths: {
		total: payload.deaths.total,
		new: payload.deaths.new
	},
	recovered: {
		total: payload.recovered.total,
		new: payload.recovered.new
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<cassandra-db:insert doc:name="Insert" doc:id="32b2e3af-b727-4e32-8a51-2cd52fe18188" config-ref="CassandraDB_Config" keyspaceName="${cassandra.keyspace}" table="statistics"/>
		<logger level="INFO" doc:name="Logger" doc:id="2a84c4a1-42bc-445d-8ee9-2ef84fff9e84" />
	</flow>
	<flow name="get-covid-dataFlow" doc:id="32d93761-ceeb-4db8-bedc-e6ad3f2c0756" >
		<http:listener doc:name="Listener" doc:id="3a0dac90-c05f-4026-9e22-519cc6beccac" config-ref="HTTP_Listener_config" path="/covid"/>
		<http:request method="GET" doc:name="Request" doc:id="92751de8-d8cb-43eb-af31-5d911c4e4dec" config-ref="HTTP_Request_covid" path="/historical">
			<http:query-params ><![CDATA[#[output application/java
---
{
	"country" : "Value"
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="07ad0e72-34e8-47c0-9623-0eba1cca99b4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.*country distinctBy $]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set vars" doc:id="2e279ee3-5d45-478d-80e7-b39303fee6a9" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="country" ><![CDATA[attributes.queryParams.country]]></ee:set-variable>
				<ee:set-variable variableName="lastDate" ><![CDATA[output application/java
var lastDays = attributes.queryParams.lastDays default 90
---
(now() - ("P$(lastDays)D" as Period)) as Date as String]]></ee:set-variable>
				<ee:set-variable variableName="lastDays" ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.lastDays as Number default 90]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value='#[{
	query: "SELECT * FROM covid.statistics WHERE country = ? AND date &gt;= ?",
	parameters: [vars.country, vars.lastDate]
}]' doc:name="Set Variable" doc:id="ff0d33b1-c85f-4ccf-8a2f-99a9790fe89e" variableName="dynamicQuery"/>
		<cassandra-db:select doc:name="Select" doc:id="bf7b9531-c26a-4b1e-bf5f-4ca9fe51732e" config-ref="CassandraDB_Config" parameters="#[vars.dynamicQuery.parameters]">
			<cassandra-db:query ><![CDATA[#[vars.dynamicQuery.query]]]></cassandra-db:query>
		</cassandra-db:select>
		<ee:transform doc:name="Transform Message" doc:id="19eb9c18-4a3b-4357-814f-13588645e5ff" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
var size = sizeOf(payload)
---
if (size == 0 or size != vars.lastDays) 
	lookup('get--covid-dataFlow', payload) 
else
	payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b970b9f8-fdd3-42ff-b1c7-019bbace6fa3" />
	</flow>
</mule>
